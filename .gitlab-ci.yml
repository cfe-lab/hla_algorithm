---
variables:
  PYTHON_VERSION:
    value: "3.8"
    options:
      - "3.8"
      - "3.9"
      - "3.10"
      - "3.11"
    description: Python version to use

stages:
  - validate
  - test
  - build

validate-yaml:
  stage: validate
  image: alpine
  script:
    - apk add yamllint
    - cd $CI_PROJECT_DIR
    - yamllint .
  rules:
    - changes:
        - "*.yml"
        - "*.yaml"

Check-For-Black:
  stage: validate
  image: black
  script:
    - cd $CI_PROJECT_DIR
    - black --check src/
  allow_failure: false
  rules:
    - if: $CI_JOB_MANUAL
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - src/**/*.py
        - tools/*.py

Check-HLA-Modified-Dates:
  stage: validate
  image: python:${PYTHON_VERSION}-slim
  before_script:
    - apt update
    - apt install git-restore-mtime -y --no-install-recommends
    - pip install typer
  script:
    - cd $CI_PROJECT_DIR
    - python tools/check_date_modified.py check-dates
  allow_failure: false
  rules:
    - if: $CI_JOB_MANUAL
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - src/**/*.csv
        - src/**/*.mtime

Unit-Tests:
  image: python:${PYTHON_VERSION}-slim
  before_script:
    - pip install hatch
  script:
    - hatch env run --env test ci-report
  parallel:
    matrix:
      - PYTHON_VERSION:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
  coverage: '/^TOTAL.+?(\d+\%)$/'
  interruptible: true
  artifacts:
    reports:
      junit: unit_test.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
